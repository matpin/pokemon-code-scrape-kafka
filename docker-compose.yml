version: '3'
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - '29092:29092'
      - '9094:9094'
    expose:
      - "9093"
    environment:
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://0.0.0.0:29092,INTERNAL://0.0.0.0:9092,DOCKER://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092,DOCKER://172.17.0.1:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper

  producer:
    build: ./producer
    container_name: producer
    ports:
      - "8001:8000"
    depends_on:
      kafka:
        condition: service_healthy

  mongo-consumer:
    build: ./mongoDB
    container_name: mongo-consumer
    ports:
      - "8002:8000"
    depends_on:
      kafka:
        condition: service_healthy

  webhook-consumer:
    build: ./webhook
    container_name: webhook-consumer
    ports:
      - "8003:8000"
    depends_on:
      kafka:
        condition: service_healthy

  dead-letter-queue:
    build: ./dead-letter-queue
    container_name: dead-letter-queue
    ports:
      - "8004:8000"
    depends_on:
      kafka:
        condition: service_healthy

  mongo:
    image: mongo
    container_name: mongoDB
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data: